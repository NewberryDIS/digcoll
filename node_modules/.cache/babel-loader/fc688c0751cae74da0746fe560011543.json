{"ast":null,"code":"var _jsxFileName = \"/home/c2lknt/Documents/c2lknt/cracoll/src/components/content.js\";\nimport React, { useState } from 'react';\n\nconst Button = props => {\n  const buttonCss = {\n    normal: {\n      padding: '15px 40px',\n      fontSize: '20px',\n      background: props.colors[3][1],\n      color: props.colors[4][1],\n      border: 0,\n      transition: 'all 0.2s',\n      position: 'relative',\n      left: 0\n    },\n    hover: {\n      left: '20vmin',\n      color: props.colors[3][1],\n      background: props.colors[4][1]\n    }\n  };\n  const [hover, setHover] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexBasis: '50px'\n    },\n    onMouseEnter: () => {\n      setHover(true);\n    },\n    onMouseLeave: () => {\n      setHover(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: { ...buttonCss.normal,\n      ...(hover ? buttonCss.hover : null)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, props.text));\n};\n\nconst Content = props => {\n  const jumboCss = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: props.colors[2][1],\n    color: props.colors[4][1],\n    height: '60vh'\n  };\n  const colorBoxes = props.colors.map((c, index) => {\n    const textColor = index > 1 ? props.colors[0][1] : props.colors[4][1];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: c[0],\n      className: \"color\",\n      style: {\n        height: '200px',\n        flex: 1,\n        backgroundColor: c[1]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        lineHeight: '200px',\n        color: textColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, c[0]));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: jumboCss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: 'contribute \\u2BC8',\n    colors: props.colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      flex: 1,\n      fontFamily: props.font\n    },\n    className: \"mainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Content will go here\"), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mainsubtitle\",\n    style: {\n      flex: 1,\n      fontFamily: props.font === \"'Major Mono Display', monospace\" ? \"'Anonymous Pro', monospace\" : \"'Major Mono Display', monospace\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"a gallery or somsuch\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, colorBoxes));\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/c2lknt/Documents/c2lknt/cracoll/src/components/content.js"],"names":["React","useState","Button","props","buttonCss","normal","padding","fontSize","background","colors","color","border","transition","position","left","hover","setHover","flexBasis","text","Content","jumboCss","flex","display","flexDirection","backgroundColor","height","colorBoxes","map","c","index","textColor","lineHeight","fontFamily","font"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = props => {\n    const buttonCss = {\n        normal:{\n            padding: '15px 40px',\n            fontSize: '20px',\n            background: props.colors[3][1],\n            color: props.colors[4][1],\n            border: 0,\n            transition: 'all 0.2s',\n            position: 'relative',\n            left: 0,\n        },\n        hover: {\n            left: '20vmin',\n            color: props.colors[3][1],\n            background: props.colors[4][1],\n        }\n    }\n    const [hover, setHover] = useState(false);\n    return (\n        <div style={{\n            flexBasis: '50px',\n\n            }}\n            \n            onMouseEnter={()=>{\n                setHover(true);\n            }}\n            onMouseLeave={()=>{\n                setHover(false);\n            }} \n            >\n\n        <button \n            style={{\n                ...buttonCss.normal,\n                ...(hover ? buttonCss.hover : null)\n            }} >{props.text}</button>\n            </div>\n    )\n}\n\nconst Content = props => {\n    const jumboCss = {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: props.colors[2][1],\n        color: props.colors[4][1],\n        height: '60vh',\n    }\n    const colorBoxes = props.colors.map((c, index) => {\n          const textColor = index > 1 ? props.colors[0][1] : props.colors[4][1]\n          return (\n              <div key={c[0]} className=\"color\" style={{\n                height: '200px',\n                flex: 1,\n\n                backgroundColor: c[1],\n              }}>\n              <p style={{\n                lineHeight: '200px',\n                color: textColor\n              }}> \n                {c[0]}\n              </p>\n            </div>\n            )\n        })\n    return (\n        <div style={jumboCss}>\n                <Button text={'contribute \\u2BC8'} colors={props.colors} />\n            <h1 style={{\n                flex: 1,\n                fontFamily: props.font\n            }} className=\"mainTitle\">\n                Content will go here\n            </h1>\n            <h2 className=\"mainsubtitle\" style={{\n                flex: 1,\n                fontFamily: props.font === \"'Major Mono Display', monospace\" ? \"'Anonymous Pro', monospace\" : \"'Major Mono Display', monospace\"\n            }} >\n                a gallery or somsuch\n            </h2>\n            <div style={{\n                flex:1,\n                display: 'flex',\n                flexDirection: 'row',\n            }} >\n            {colorBoxes}\n            </div>\n        </div>\n    )\n}\nexport default Content"]},"metadata":{},"sourceType":"module"}